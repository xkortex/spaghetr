syntax = "proto3";
package protos;

service AioSubprocess {
    rpc PopenBasic (ArgsRequest) returns (stream StreamChunkOut) {}

}

// nullable string
message NString {
    string val = 1;
}

// nullable double
message NDouble {
    double val = 1;
}

// nullable sint
message NSint32 {
    sint32 val = 1;
}

// container for streamed output.
// Perhaps I want to return a handle and read from that instead of returning
// the stream, that way the process can be detached
message StreamChunkOut {
    NSint32 returncode = 1;
    NSint32 pid = 2;
    bytes stdout = 3;
    bytes stderr = 4;

}


// Request modelling a call to some POSIX process
message ArgsRequest {
    string name = 1;
    repeated string args = 2;
    NString input = 3;
    sint64 bufsize = 4;
    NString executable = 5;
    // work in progress
    string stdin = 6;
    bool shell = 7;
    NString cwd = 8;
    map<string, string> env = 9;
    NDouble timeout = 10;


}


